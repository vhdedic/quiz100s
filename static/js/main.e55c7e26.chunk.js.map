{"version":3,"sources":["components/QuizStart.js","components/QuizEnd.js","components/QuizBody.js","Quiz.js","index.js"],"names":["QuizStart","Box","Typography","variant","paragraph","to","Button","size","children","fullWidth","QuizEnd","props","mt","finalTime","finalScore","data","shuffle","questions","QuizBody","useState","time","setTime","score","setScore","success","setSuccess","useEffect","timeCounter","setInterval","clearInterval","handleClick","e","currentTarget","value","correct","position","answerInput","answers","map","oneAnswer","index","mb","onClick","question","Quiz","basename","Container","align","path","ReactDOM","render","document","querySelector"],"mappings":"o1PAsBeA,MAhBf,WACE,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAS,KAAMC,WAAS,EAApC,0BACA,cAAC,IAAD,CAAMC,GAAG,QAAT,SACE,cAACC,EAAA,EAAD,CACEH,QAAS,WACTI,KAAM,QACNC,SAAU,QACVC,WAAS,U,iCCYJC,MAvBf,SAAiBC,GACf,OACE,eAACV,EAAA,EAAD,WACE,cAAC,IAAD,CAAMI,GAAG,IAAT,SACE,cAACC,EAAA,EAAD,CACEH,QAAS,WACTI,KAAM,QACNC,SAAU,YACVC,WAAS,MAGb,eAACR,EAAA,EAAD,CAAKW,GAAI,EAAT,UACE,eAACV,EAAA,EAAD,CAAYC,QAAS,KAAMC,WAAS,EAApC,6BACmBO,EAAME,UADzB,OAGA,eAACX,EAAA,EAAD,CAAYC,QAAS,KAAMC,WAAS,EAApC,oBACUO,EAAMG,qBCdlBC,EAAOC,IAAQC,GAkFNC,MAhFf,WAEE,MAAwBC,mBAAS,KAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAQAC,qBAAU,WACR,IAAMC,EAAcC,aAAY,WAN5BR,EAAO,GAAKI,GACdH,EAAQD,EAAO,KAK8B,KAC/C,OAAO,kBAAMS,cAAcF,OAG7B,IAAMG,EAAc,SAACC,GACJA,EAAEC,cAAcC,QACTlB,EAAKO,GAAOY,QAGhCX,EAASD,EAAQ,GAEjBG,GAAW,IAITU,EAAWpB,EAAKO,GAEhBc,EADaD,EAASE,QACGC,KAAI,SAACC,EAAWC,GAAZ,OACjC,cAACvC,EAAA,EAAD,CAAKwC,GAAI,EAAT,SACE,cAACnC,EAAA,EAAD,CACEoC,QAASZ,EAETG,MAAOM,EACPpC,QAAS,WACTI,KAAM,QACNC,SAAU+B,EACV9B,WAAS,GALJ+B,QAUX,OAAIpB,EAAO,GAAKI,EAEZ,eAACvB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAS,KAAMC,WAAS,EAApC,SAAsC+B,EAASQ,WAC/C,cAAC1C,EAAA,EAAD,UAAMmC,IACN,eAAClC,EAAA,EAAD,CAAYC,QAAS,KAAMC,WAAS,EAApC,6BACmBgB,EADnB,OAGA,eAAClB,EAAA,EAAD,CAAYC,QAAS,KAAMC,WAAS,EAApC,oBACUkB,QAII,IAATF,GACTJ,IAAQC,GAGN,eAAChB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAS,KAAMC,WAAS,EAApC,2BACA,cAAC,EAAD,CAASU,WAAYQ,EAAOT,UAAWO,QAGjCI,OAAL,GACLR,IAAQC,GAGN,eAAChB,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAYC,QAAS,KAAMC,WAAS,EAApC,uCAC6B+B,EAASD,QADtC,QAGA,cAAC,EAAD,CAASpB,WAAYQ,EAAOT,UAAWO,S,QCtDhCwB,MAtBf,WACE,OACE,cAAC,IAAD,CAAQC,SAAS,YAAjB,SACE,cAACC,EAAA,EAAD,UACE,eAAC7C,EAAA,EAAD,CAAKW,GAAI,EAAT,UACE,cAACV,EAAA,EAAD,CAAYC,QAAS,KAAM4C,MAAO,SAAU3C,WAAS,EAArD,8BAGA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4C,KAAK,QAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,iBCddC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.e55c7e26.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Link\n} from 'react-router-dom';\nimport { Box, Button, Typography } from '@material-ui/core';\n\nfunction QuizStart() {\n  return (\n    <Box>\n      <Typography variant={'h5'} paragraph>Press Start.</Typography>\n      <Link to=\"/quiz\">\n        <Button \n          variant={'outlined'} \n          size={'large'}\n          children={'Start'} \n          fullWidth\n        />\n      </Link>\n    </Box>\n  )\n}\n\nexport default QuizStart;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, Button, Typography } from '@material-ui/core';\n\nfunction QuizEnd(props) {\n  return (\n    <Box>\n      <Link to=\"/\">\n        <Button \n          variant={'outlined'} \n          size={'large'} \n          children={'Try Again'}\n          fullWidth\n        />\n      </Link>\n      <Box mt={3}>\n        <Typography variant={'h5'} paragraph>\n          Remaining time: {props.finalTime}s\n        </Typography>\n        <Typography variant={'h5'} paragraph>\n          Score: {props.finalScore}\n        </Typography>\n      </Box>\n    </Box>\n  )\n}\n\nexport default QuizEnd;\n","import React, { useState, useEffect } from 'react';\nimport shuffle from 'shuffle-array';\nimport questions from './json/questions.json';\nimport QuizEnd from './QuizEnd';\nimport { Box, Button, Typography } from '@material-ui/core';\n\nconst data = shuffle(questions);\n\nfunction QuizBody() {\n\n  const [time, setTime] = useState(100);\n  const [score, setScore] = useState(0);\n  const [success, setSuccess] = useState(true);\n\n  const timer = () => {\n    if (time > 0 && success) {\n      setTime(time - 1)\n    }\n  }\n\n  useEffect(() => {\n    const timeCounter = setInterval(() => timer(), 1000);\n    return () => clearInterval(timeCounter);\n  })\n\n  const handleClick = (e) => {\n    const answer = e.currentTarget.value;\n    const correctAnswer = data[score].correct;\n\n    if (answer === correctAnswer) {\n      setScore(score + 1)\n    } else {\n      setSuccess(false)\n    }\n  }\n\n  const position = data[score];\n  const allAnswers = position.answers;\n  const answerInput = allAnswers.map((oneAnswer, index) => (\n    <Box mb={3}>\n      <Button\n        onClick={handleClick}\n        key={index}\n        value={oneAnswer}\n        variant={'outlined'}\n        size={'large'}\n        children={oneAnswer}\n        fullWidth\n      />\n    </Box>\n  ))\n\n  if (time > 0 && success) {\n    return (\n      <Box>\n        <Typography variant={'h5'} paragraph>{position.question}</Typography>\n        <Box>{answerInput}</Box>\n        <Typography variant={'h5'} paragraph>\n          Remaining time: {time}s\n        </Typography>\n        <Typography variant={'h5'} paragraph>\n          Score: {score}\n        </Typography>\n      </Box>\n    )\n  } else if (time === 0) {\n    shuffle(questions);\n\n    return (\n      <Box>\n        <Typography variant={'h5'} paragraph>Time expired.</Typography>\n        <QuizEnd finalScore={score} finalTime={time} />\n      </Box>\n    )\n  } else if (!success) {\n    shuffle(questions);\n\n    return (\n      <Box>\n        <Typography variant={'h5'} paragraph>\n          Wrong. Correct answer is \"{position.correct}\".\n        </Typography>\n        <QuizEnd finalScore={score} finalTime={time} />\n      </Box>\n    )\n  }\n}\n\nexport default QuizBody;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport QuizStart from './components/QuizStart';\nimport QuizBody from './components/QuizBody';\nimport { Box, Container, Typography } from '@material-ui/core';\n\nfunction Quiz() {\n  return (\n    <Router basename=\"/quiz100s\">\n      <Container>\n        <Box mt={4}>\n          <Typography variant={'h3'} align={'center'} paragraph>\n            Quiz 100 seconds\n          </Typography>\n          <Switch>\n            <Route path=\"/quiz\">\n              <QuizBody />\n            </Route>\n            <Route path=\"/\">\n              <QuizStart />\n            </Route>\n          </Switch>\n        </Box>\n      </Container>\n    </Router>\n  )\n}\n\nexport default Quiz;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Quiz from './Quiz'\n\nReactDOM.render(\n  <Quiz />,\n  document.querySelector('#root')\n);\n\n\n"],"sourceRoot":""}